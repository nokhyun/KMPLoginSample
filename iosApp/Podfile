=begin
    kotlinNavite를 사용하므로, path 및, 중복파일 제거를 위한 moduler 설정.
        정적으로 연결하는 Swift; 잠재적으로 번들 크기와 실행 시간이 줄어듭니다.
        브리징/우산 헤더에서 라이브러리를 가져오는 대신 다른 라이브러리를 모듈식으로 사용합니다.
        Xcode 지원 기능 지원
        일반적으로 모듈 맵을 지원하면 부피가 큰 Xcode 스타일 프레임워크/라이브러리 없이 모듈을 만들 수 있으며 개별 Xcode 대상의 오버헤드 없이 컴파일 시간을 잠재적으로 향상시킬 수 있습니다.
        Buck과 같은 빌드 도구를 지원하기 위한 한 단계
=end
# Uncomment the next line to define a global platform for your project
platform :ios, '13.5'

target 'iosApp' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!
    pod 'composeApp', :modular_headers => true, :path => '../composeApp'

  # Pods for iosApp

end
